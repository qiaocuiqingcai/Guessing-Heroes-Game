"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING, final
from pandas._typing import DtypeObj, IndexLabel
from pandas import DataFrame, Series

"""
Implementation of nlargest and nsmallest.
"""
if TYPE_CHECKING:
    ...
class SelectN:
    def __init__(self, obj, n: int, keep: str) -> None:
        ...
    
    def compute(self, method: str) -> DataFrame | Series:
        ...
    
    @final
    def nlargest(self): # -> DataFrame | Series:
        ...
    
    @final
    def nsmallest(self): # -> DataFrame | Series:
        ...
    
    @final
    @staticmethod
    def is_valid_dtype_n_method(dtype: DtypeObj) -> bool:
        """
        Helper function to determine if dtype is valid for
        nsmallest/nlargest methods
        """
        ...
    


class SelectNSeries(SelectN):
    """
    Implement n largest/smallest for Series

    Parameters
    ----------
    obj : Series
    n : int
    keep : {'first', 'last'}, default 'first'

    Returns
    -------
    nordered : Series
    """
    def compute(self, method: str) -> Series:
        ...
    


class SelectNFrame(SelectN):
    """
    Implement n largest/smallest for DataFrame

    Parameters
    ----------
    obj : DataFrame
    n : int
    keep : {'first', 'last'}, default 'first'
    columns : list or str

    Returns
    -------
    nordered : DataFrame
    """
    def __init__(self, obj: DataFrame, n: int, keep: str, columns: IndexLabel) -> None:
        ...
    
    def compute(self, method: str) -> DataFrame:
        ...
    


