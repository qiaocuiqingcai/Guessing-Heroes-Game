"""
This type stub file was generated by pyright.
"""

from typing import TYPE_CHECKING
from pandas._typing import ArrayLike, DtypeObj, IgnoreRaise

"""
Functions for implementing 'astype' methods according to pandas conventions,
particularly ones that differ from numpy.
"""
if TYPE_CHECKING:
    ...
_dtype_obj = ...
def astype_array(values: ArrayLike, dtype: DtypeObj, copy: bool = ...) -> ArrayLike:
    """
    Cast array (ndarray or ExtensionArray) to the new dtype.

    Parameters
    ----------
    values : ndarray or ExtensionArray
    dtype : dtype object
    copy : bool, default False
        copy if indicated

    Returns
    -------
    ndarray or ExtensionArray
    """
    ...

def astype_array_safe(values: ArrayLike, dtype, copy: bool = ..., errors: IgnoreRaise = ...) -> ArrayLike:
    """
    Cast array (ndarray or ExtensionArray) to the new dtype.

    This basically is the implementation for DataFrame/Series.astype and
    includes all custom logic for pandas (NaN-safety, converting str to object,
    not allowing )

    Parameters
    ----------
    values : ndarray or ExtensionArray
    dtype : str, dtype convertible
    copy : bool, default False
        copy if indicated
    errors : str, {'raise', 'ignore'}, default 'raise'
        - ``raise`` : allow exceptions to be raised
        - ``ignore`` : suppress exceptions. On error return original object

    Returns
    -------
    ndarray or ExtensionArray
    """
    ...

def astype_is_view(dtype: DtypeObj, new_dtype: DtypeObj) -> bool:
    """Checks if astype avoided copying the data.

    Parameters
    ----------
    dtype : Original dtype
    new_dtype : target dtype

    Returns
    -------
    True if new data is a view or not guaranteed to be a copy, False otherwise
    """
    ...

