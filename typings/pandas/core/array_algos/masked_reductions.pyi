"""
This type stub file was generated by pyright.
"""

import numpy as np
from typing import TYPE_CHECKING
from pandas._typing import AxisInt, npt

"""
masked_reductions.py is for reduction algorithms using a mask-based approach
for missing values.
"""
if TYPE_CHECKING:
    ...
def sum(values: np.ndarray, mask: npt.NDArray[np.bool_], *, skipna: bool = ..., min_count: int = ..., axis: AxisInt | None = ...): # -> NAType:
    ...

def prod(values: np.ndarray, mask: npt.NDArray[np.bool_], *, skipna: bool = ..., min_count: int = ..., axis: AxisInt | None = ...): # -> NAType:
    ...

def min(values: np.ndarray, mask: npt.NDArray[np.bool_], *, skipna: bool = ..., axis: AxisInt | None = ...): # -> NAType:
    ...

def max(values: np.ndarray, mask: npt.NDArray[np.bool_], *, skipna: bool = ..., axis: AxisInt | None = ...): # -> NAType:
    ...

def mean(values: np.ndarray, mask: npt.NDArray[np.bool_], *, skipna: bool = ..., axis: AxisInt | None = ...): # -> NAType:
    ...

def var(values: np.ndarray, mask: npt.NDArray[np.bool_], *, skipna: bool = ..., axis: AxisInt | None = ..., ddof: int = ...): # -> NAType:
    ...

def std(values: np.ndarray, mask: npt.NDArray[np.bool_], *, skipna: bool = ..., axis: AxisInt | None = ..., ddof: int = ...): # -> NAType:
    ...

