"""
This type stub file was generated by pyright.
"""

from datetime import date, datetime, time, timedelta
from typing import Any, TYPE_CHECKING, Union
from pandas.util._decorators import doc
from pandas.core.shared_docs import _shared_docs
from pandas.io.excel._base import BaseExcelReader
from python_calamine import CalamineSheet, CalamineWorkbook
from pandas._typing import FilePath, NaTType, ReadBuffer, Scalar, StorageOptions

if TYPE_CHECKING:
    ...
_CellValue = Union[int, float, str, bool, time, date, datetime, timedelta]
class CalamineReader(BaseExcelReader["CalamineWorkbook"]):
    @doc(storage_options=_shared_docs["storage_options"])
    def __init__(self, filepath_or_buffer: FilePath | ReadBuffer[bytes], storage_options: StorageOptions | None = ..., engine_kwargs: dict | None = ...) -> None:
        """
        Reader using calamine engine (xlsx/xls/xlsb/ods).

        Parameters
        ----------
        filepath_or_buffer : str, path to be parsed or
            an open readable stream.
        {storage_options}
        engine_kwargs : dict, optional
            Arbitrary keyword arguments passed to excel engine.
        """
        ...
    
    def load_workbook(self, filepath_or_buffer: FilePath | ReadBuffer[bytes], engine_kwargs: Any) -> CalamineWorkbook:
        ...
    
    @property
    def sheet_names(self) -> list[str]:
        ...
    
    def get_sheet_by_name(self, name: str) -> CalamineSheet:
        ...
    
    def get_sheet_by_index(self, index: int) -> CalamineSheet:
        ...
    
    def get_sheet_data(self, sheet: CalamineSheet, file_rows_needed: int | None = ...) -> list[list[Scalar | NaTType | time]]:
        ...
    


