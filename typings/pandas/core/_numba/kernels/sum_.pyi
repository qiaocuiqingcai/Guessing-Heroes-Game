"""
This type stub file was generated by pyright.
"""

import numba
import numpy as np
from typing import Any, TYPE_CHECKING
from numba.extending import register_jitable
from pandas._typing import npt

"""
Numba 1D sum kernels that can be shared by
* Dataframe / Series
* groupby
* rolling / expanding

Mirrors pandas/_libs/window/aggregation.pyx
"""
if TYPE_CHECKING:
    ...
@numba.jit(nopython=True, nogil=True, parallel=False)
def add_sum(val: Any, nobs: int, sum_x: Any, compensation: Any, num_consecutive_same_value: int, prev_value: Any) -> tuple[int, Any, Any, int, Any]:
    ...

@numba.jit(nopython=True, nogil=True, parallel=False)
def remove_sum(val: Any, nobs: int, sum_x: Any, compensation: Any) -> tuple[int, Any, Any]:
    ...

@numba.jit(nopython=True, nogil=True, parallel=False)
def sliding_sum(values: np.ndarray, result_dtype: np.dtype, start: np.ndarray, end: np.ndarray, min_periods: int) -> tuple[np.ndarray, list[int]]:
    ...

@register_jitable
def grouped_kahan_sum(values: np.ndarray, result_dtype: np.dtype, labels: npt.NDArray[np.intp], ngroups: int) -> tuple[np.ndarray, npt.NDArray[np.int64], np.ndarray, npt.NDArray[np.int64], np.ndarray]:
    ...

@numba.jit(nopython=True, nogil=True, parallel=False)
def grouped_sum(values: np.ndarray, result_dtype: np.dtype, labels: npt.NDArray[np.intp], ngroups: int, min_periods: int) -> tuple[np.ndarray, list[int]]:
    ...

