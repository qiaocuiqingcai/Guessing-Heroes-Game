"""
This type stub file was generated by pyright.
"""

import pyarrow
from typing import TYPE_CHECKING
from pandas.core.dtypes.dtypes import IntervalDtype, PeriodDtype
from pandas._typing import IntervalClosedType

if TYPE_CHECKING:
    ...
class ArrowPeriodType(pyarrow.ExtensionType):
    def __init__(self, freq) -> None:
        ...
    
    @property
    def freq(self): # -> Any:
        ...
    
    def __arrow_ext_serialize__(self) -> bytes:
        ...
    
    @classmethod
    def __arrow_ext_deserialize__(cls, storage_type, serialized) -> ArrowPeriodType:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __ne__(self, other) -> bool:
        ...
    
    def __hash__(self) -> int:
        ...
    
    def to_pandas_dtype(self) -> PeriodDtype:
        ...
    


_period_type = ...
class ArrowIntervalType(pyarrow.ExtensionType):
    def __init__(self, subtype, closed: IntervalClosedType) -> None:
        ...
    
    @property
    def subtype(self):
        ...
    
    @property
    def closed(self) -> IntervalClosedType:
        ...
    
    def __arrow_ext_serialize__(self) -> bytes:
        ...
    
    @classmethod
    def __arrow_ext_deserialize__(cls, storage_type, serialized) -> ArrowIntervalType:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __ne__(self, other) -> bool:
        ...
    
    def __hash__(self) -> int:
        ...
    
    def to_pandas_dtype(self) -> IntervalDtype:
        ...
    


_interval_type = ...
_ERROR_MSG = ...
def patch_pyarrow(): # -> None:
    class ForbiddenExtensionType(pyarrow.ExtensionType):
        ...
    
    

